// Generated from ./src/story/grammar/story.g4 by ANTLR 4.7.3-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class storyLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly SINGLE_QUOTE = 9;
	public static readonly DOUBLE_QUOTE = 10;
	public static readonly VARIABLE_NAME = 11;
	public static readonly WORD = 12;
	public static readonly NUMBER = 13;
	public static readonly WS = 14;
	public static readonly EOL = 15;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "POLISH_LETTER", 
		"ENG_LETTER", "SPECIAL_LETTER", "SINGLE_QUOTE", "DOUBLE_QUOTE", "VARIABLE_NAME", 
		"WORD", "NUMBER", "WS", "EOL",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'Feature'", "'Scenario'", "'Given'", "'When'", "'Then'", "'And'", 
		"'<'", "'>'", "'''", "'\"'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, "SINGLE_QUOTE", "DOUBLE_QUOTE", "VARIABLE_NAME", 
		"WORD", "NUMBER", "WS", "EOL",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(storyLexer._LITERAL_NAMES, storyLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return storyLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(storyLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "story.g4"; }

	// @Override
	public get ruleNames(): string[] { return storyLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return storyLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return storyLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return storyLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x11z\b\x01\x04" +
		"\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06\x04" +
		"\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r\t\r" +
		"\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t\x12" +
		"\x04\x13\t\x13\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02" +
		"\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03" +
		"\x03\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x05\x03\x05" +
		"\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x07" +
		"\x03\x07\x03\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03\n\x03\n\x03\v\x03" +
		"\v\x03\f\x03\f\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0F\x05\x0F\\\n\x0F\x03" +
		"\x0F\x03\x0F\x06\x0F`\n\x0F\r\x0F\x0E\x0Fa\x03\x10\x03\x10\x03\x10\x03" +
		"\x10\x06\x10h\n\x10\r\x10\x0E\x10i\x03\x11\x06\x11m\n\x11\r\x11\x0E\x11" +
		"n\x03\x12\x06\x12r\n\x12\r\x12\x0E\x12s\x03\x13\x06\x13w\n\x13\r\x13\x0E" +
		"\x13x\x02\x02\x02\x14\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v" +
		"\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\x02\x15\x02\x02\x17\x02\x02" +
		"\x19\x02\v\x1B\x02\f\x1D\x02\r\x1F\x02\x0E!\x02\x0F#\x02\x10%\x02\x11" +
		"\x03\x02\b\t\x02\xD5\xD5\xF5\xF5\u0106\u0109\u011A\u011B\u0143\u0146\u015C" +
		"\u015D\u017B\u017E\x04\x02C\\c|\b\x02##..00==AAaa\x03\x022;\x04\x02\v" +
		"\v\"\"\x04\x02\f\f\x0F\x0F\x02\x80\x02\x03\x03\x02\x02\x02\x02\x05\x03" +
		"\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02" +
		"\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02" +
		"\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02" +
		"\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02" +
		"\x02\x02%\x03\x02\x02\x02\x03\'\x03\x02\x02\x02\x05/\x03\x02\x02\x02\x07" +
		"8\x03\x02\x02\x02\t>\x03\x02\x02\x02\vC\x03\x02\x02\x02\rH\x03\x02\x02" +
		"\x02\x0FL\x03\x02\x02\x02\x11N\x03\x02\x02\x02\x13P\x03\x02\x02\x02\x15" +
		"R\x03\x02\x02\x02\x17T\x03\x02\x02\x02\x19V\x03\x02\x02\x02\x1BX\x03\x02" +
		"\x02\x02\x1D[\x03\x02\x02\x02\x1Fg\x03\x02\x02\x02!l\x03\x02\x02\x02#" +
		"q\x03\x02\x02\x02%v\x03\x02\x02\x02\'(\x07H\x02\x02()\x07g\x02\x02)*\x07" +
		"c\x02\x02*+\x07v\x02\x02+,\x07w\x02\x02,-\x07t\x02\x02-.\x07g\x02\x02" +
		".\x04\x03\x02\x02\x02/0\x07U\x02\x0201\x07e\x02\x0212\x07g\x02\x0223\x07" +
		"p\x02\x0234\x07c\x02\x0245\x07t\x02\x0256\x07k\x02\x0267\x07q\x02\x02" +
		"7\x06\x03\x02\x02\x0289\x07I\x02\x029:\x07k\x02\x02:;\x07x\x02\x02;<\x07" +
		"g\x02\x02<=\x07p\x02\x02=\b\x03\x02\x02\x02>?\x07Y\x02\x02?@\x07j\x02" +
		"\x02@A\x07g\x02\x02AB\x07p\x02\x02B\n\x03\x02\x02\x02CD\x07V\x02\x02D" +
		"E\x07j\x02\x02EF\x07g\x02\x02FG\x07p\x02\x02G\f\x03\x02\x02\x02HI\x07" +
		"C\x02\x02IJ\x07p\x02\x02JK\x07f\x02\x02K\x0E\x03\x02\x02\x02LM\x07>\x02" +
		"\x02M\x10\x03\x02\x02\x02NO\x07@\x02\x02O\x12\x03\x02\x02\x02PQ\t\x02" +
		"\x02\x02Q\x14\x03\x02\x02\x02RS\t\x03\x02\x02S\x16\x03\x02\x02\x02TU\t" +
		"\x04\x02\x02U\x18\x03\x02\x02\x02VW\x07)\x02\x02W\x1A\x03\x02\x02\x02" +
		"XY\x07$\x02\x02Y\x1C\x03\x02\x02\x02Z\\\x07a\x02\x02[Z\x03\x02\x02\x02" +
		"[\\\x03\x02\x02\x02\\_\x03\x02\x02\x02]`\x05\x15\v\x02^`\x07a\x02\x02" +
		"_]\x03\x02\x02\x02_^\x03\x02\x02\x02`a\x03\x02\x02\x02a_\x03\x02\x02\x02" +
		"ab\x03\x02\x02\x02b\x1E\x03\x02\x02\x02ch\x05\x15\v\x02dh\x05\x13\n\x02" +
		"eh\x05!\x11\x02fh\x05\x17\f\x02gc\x03\x02\x02\x02gd\x03\x02\x02\x02ge" +
		"\x03\x02\x02\x02gf\x03\x02\x02\x02hi\x03\x02\x02\x02ig\x03\x02\x02\x02" +
		"ij\x03\x02\x02\x02j \x03\x02\x02\x02km\t\x05\x02\x02lk\x03\x02\x02\x02" +
		"mn\x03\x02\x02\x02nl\x03\x02\x02\x02no\x03\x02\x02\x02o\"\x03\x02\x02" +
		"\x02pr\t\x06\x02\x02qp\x03\x02\x02\x02rs\x03\x02\x02\x02sq\x03\x02\x02" +
		"\x02st\x03\x02\x02\x02t$\x03\x02\x02\x02uw\t\x07\x02\x02vu\x03\x02\x02" +
		"\x02wx\x03\x02\x02\x02xv\x03\x02\x02\x02xy\x03\x02\x02\x02y&\x03\x02\x02" +
		"\x02\v\x02[_aginsx\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!storyLexer.__ATN) {
			storyLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(storyLexer._serializedATN));
		}

		return storyLexer.__ATN;
	}

}

